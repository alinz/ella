//
// Client Handlers
//
{{ range $service := . }}
type {{ $service.NameImpl }} struct {
	client *http.Client
	host   string
}

var _ {{ $service.Name }} = (*{{ $service.NameImpl }})(nil)

func Create{{ $service.Name }}Client(host string, client *http.Client) {{ $service.Name }} {
	return &{{ $service.NameImpl }}{
		host:   host,
		client: client,
	}
}

{{- range $method := $service.Methods }}

func (s *{{ $service.NameImpl }}) {{ $method.Name }}(ctx context.Context, {{ $method.ArgsInput }}) ({{ $method.ReturnsWithTypes }}, err error) {
	url, err := urlPathJoin(s.host, {{ $method.PathName }})
	if err != nil {
		return
	}

	in := struct {
        {{ $method.ArgsWithTypes }}
    }{
        {{ $method.Args }}
    }

	out := struct {
        {{ $method.ReturnsWithTypes }}
    }{}

	err = callServiceMethod(ctx, {{ $method.Http }}, s.client, url, &in, &out)
	if err != nil {
		return
	}

	return {{ $method.Returns }}, nil
}

{{- end }}
{{- end }}